local function sendNotification()
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Goto Gifts", 
        Text = "Make SURE YOU ARE ON THE GIFTS.", 
        Icon = "rbxassetid://your_icon_id_here", -- Optional icon ID
        Duration = 5 -- Duration in seconds
    })
end

-- Call the function to show the notification
sendNotification()

local function rename(remotename, hashedremote)
    hashedremote.Name = remotename
end

local AC_MODULE = game:GetService("ReplicatedStorage").ClientModules.Core.RouterClient.RouterClient

local initFunction = require(AC_MODULE).init
local upvalueTable = getupvalue(initFunction, 7)

if type(upvalueTable) == "table" then
    table.foreach(upvalueTable, rename)
else
print("patch rip")
end

-- Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")

-- Player Setup
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

-- Status UI
local statusUI = Instance.new("TextLabel")
statusUI.Size = UDim2.new(0, 250, 0, 40)
statusUI.Position = UDim2.new(0.5, -125, 0, 10)
statusUI.AnchorPoint = Vector2.new(0.5, 0)
statusUI.BackgroundTransparency = 0.7
statusUI.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
statusUI.TextColor3 = Color3.fromRGB(255, 105, 180)
statusUI.Text = "ðŸŒ¸ Initializing... ðŸŒ¸"
statusUI.Font = Enum.Font.GothamBold
statusUI.TextSize = 14
statusUI.Parent = player:WaitForChild("PlayerGui")

-- Main Functions
local function activateMinigame()
    -- Activate furniture
    local args = {
        [1] = "f-49",
        [2] = "Seat3",
        [3] = {
            ["cframe"] = CFrame.new(92.862, 32.845, -1341.469) * CFrame.Angles(0, -0.734, 0)
        },
        [4] = character
    }
    
    ReplicatedStorage.API["HousingAPI/ActivateInteriorFurniture"]:InvokeServer(unpack(args))
    
    -- Teleport to circle
    local circle = workspace.Interiors["MainMap!Default"].Shop.Visual.PagodaCurved.JoinCircleWood.Model.Model.Circle
    if circle then
        humanoidRootPart.CFrame = circle.CFrame * CFrame.new(0, 3, 0)
    end
end

local function collectRings()
    local ringPickups = workspace.Interiors.BlossomShakedownInterior.RingPickups
    for _, ring in ipairs(ringPickups:GetChildren()) do
        if ring:IsA("Model") and ring.PrimaryPart then
            humanoidRootPart.CFrame = ring.PrimaryPart.CFrame + Vector3.new(0, 3, 0)
            task.wait(0.05) -- Faster collection
        end
    end
end

-- Main Loop
RunService.Heartbeat:Connect(function()
    -- Check if ring pickups exist
    local success, ringsExist = pcall(function()
        return workspace.Interiors.BlossomShakedownInterior.RingPickups:FindFirstChildWhichIsA("Model")
    end)

    if success and ringsExist then
        statusUI.Text = "ðŸŒ¸ Collecting Rings ðŸŒ¸"
        collectRings()
    else
        statusUI.Text = "ðŸŒ¸ Starting Minigame ðŸŒ¸"
        activateMinigame()
        task.wait(3) -- Wait for minigame to load
    end
end)

-- Handle character changes
player.CharacterAdded:Connect(function(newChar)
    character = newChar
    humanoidRootPart = newChar:WaitForChild("HumanoidRootPart")
    statusUI.Text = "ðŸŒ¸ Ready ðŸŒ¸"
end)
